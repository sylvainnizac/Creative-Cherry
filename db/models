# -*- coding: utf-8 -*-
import re
import sqlalchemy as sqla
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import validates

Base = declarative_base()

def create_tables(db):
    Base.metadata.create_all(db)

class User(Base):
    __tablename__ = 'users'

    id = sqla.Column(sqla.Integer, primary_key=True)
    name = sqla.Column(sqla.String, nullable=False)
    firstname = sqla.Column(sqla.String, nullable=False)
    email = sqla.Column(sqla.String, unique=True, nullable=False)
    password = sqla.Column(sqla.String, nullable=False)

    @validates('email')
    def validate_email(self, key, address):
        self.regex = re.compile("([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")
        assert self.regex.match(address), u"Incorrect email"
        return address
    
    @validates('name', 'firstname', 'email', 'password')
    def validate_empty_string(selfself, key, string):
        assert string != "", "Empty parameter %s" % key
        return string

    def __repr__(self):
       return "<User(id='%s', name='%s', firstname='%s', email='%s')>" % (
                        self.id, self.name, self.firstname, self.email)
